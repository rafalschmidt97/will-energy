{"version":3,"sources":["static/images/img-calculator.svg","static/images/logo-white.svg","static/images/img-person-bounds.svg","static/images/img-bushes.svg","static/images/logo.svg","AppState/AppState.tsx","AppState/AppActions.tsx","AppState/AppStore.tsx","AppState/AppContext.tsx","modules/applicationWizard/ApplicationDto.ts","routes.ts","layout/footer/AppFooter.tsx","shared/utils.ts","layout/header/AppHeader.tsx","shared/forms/Input/InputField.tsx","shared/forms/RadioGroup/RadioGroupField.tsx","modules/applicationWizard/applicantDetails/ApplicantDetails.tsx","modules/changeFurnace/ChangeFurnacePage.tsx","modules/applicationWizard/propertyDetails/PropertyDetails.tsx","shared/forms/DatePicker/DatePickerField.tsx","modules/applicationWizard/characteristicsOfWorks/CharacteristicsOfWorks.tsx","modules/applicationWizard/ApplicationWizard.tsx","modules/shared/fillFormStep/FillFormStep.tsx","shared/forms/GoogleSuggest/GoogleSuggest.tsx","modules/changeFurnace/addressStep/AddressStep.tsx","modules/changeFurnace/calculatorStep/CalculatorStep.tsx","modules/fillForm/FillFormPage.tsx","modules/welcome/WelcomePage.tsx","modules/privacyPolicy/PrivacyPolicyPage.tsx","modules/contact/ContactPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","HeatingType","WizardStep","actions","updateBaseData","baseData","setState","getState","setAddress","address","setAdressMedia","addressMedia","media","completeStep","wizardStep","completedApplicationSteps","indexOf","uncompleteStep","splice","updateApplication","application","initialState","undefined","area","AppStore","createStore","useApp","createHook","ctx","React","createContext","c","useContext","Error","Provider","createCtx","useAppContext","SettingProvider","AppProvider","props","counter","value","PropertyOwnershipType","EInvestorType","routes","Footer","Layout","AppFooter","className","span","src","logoImage","alt","offset","href","to","smoothScrollToSection","id","section","document","getElementById","scrollIntoView","behavior","Header","AppHeader","location","useLocation","pathname","mode","defaultSelectedKeys","Item","key","InputField","name","type","onChange","onFocus","placeholder","disabled","children","error","htmlFor","rows","e","target","classNames","role","RadioGroupField","items","Group","ChangeFurnaceStep","FormSchema","Yup","shape","firstName","required","lastName","phoneNumber","investorType","streetName","buildingNumber","houseNumber","city","bankNumber","ApplicantDetails","onCompleted","state","validationSchema","validateOnMount","initialValues","Undefined","street","onSubmit","form","date","Date","canConnectToGasNetwork","canConnectToHeatingNetwork","dispositionLawDocuments","exectuionCompany","isBenefitingDeMinimis","yearOfInvestment","addressDetails","postCode","correspondenceAddressDetails","email","bankDetails","number","values","setFieldValue","setFieldTouched","isValid","PrivateIndividual","Farmer","Fisherman","gutter","htmlType","propertyRegistrationNumber","district","buildingArea","propertyOwnershipType","PropertyDetails","toString","Owner","plannedWorkAddressDetails","commercialArea","usableArea","commercialToUsableAreaRatio","isForCommercialUse","lawParticipants","CoOwner","RestrictionsPropertyLaw","PermanentManagement","Other","DatePickerField","picker","locale","moment","oldType","oldAge","oldPower","oldConsumption","plannedType","plannedPower","plannedConsumption","plannedCompletionDate","estimatedCost","CharacteristicsOfWorks","NetworkNaturalGas","oldEnergyCharacteristics","LiquefiedNaturalGas","power","Number","parseInt","age","consumptionPerYear","plannedEnergyCharacteristics","NetworkHeat","Electricity","Biomass","Panel","Collapse","ApplicationWizard","activeStep","setActiveStep","isCompleted","length","generateApplication","a","axios","post","apiUrl","responseType","x","url","window","URL","createObjectURL","Blob","data","link","createElement","setAttribute","body","appendChild","click","accordion","activeKey","ghost","header","Summary","onClick","FillFormStep","GoogleSuggest","terms","streetTemp","split","country","buildingTemp","onSelect","apiKey","autocompletionRequest","componentRestrictions","radius","lat","lng","selectProps","noOptionsMessage","loadingMessage","filterOption","option","label","AddressStep","isPrivacyPolicyAccepted","setPrivacyPolicy","handleSubmitAdress","get","goToNextStep","checked","imgCalculator","initialFormValues","heatingType","min","FormikNextStateListener","useFormikContext","submitForm","CalculatorStep","price","availableTypes","results","setResults","setHeatingType","filteredHeatTypes","filter","hasHeatConnection","hasGasConnection","labels","range","datasets","reports","map","index","costRecords","y","cost","fill","backgroundColor","borderColor","yAxisID","options","scales","yAxes","display","position","ticks","beginAtZero","suggestedMax","gridLines","xAxes","autoSkip","maxTicksLimit","callback","legend","then","errors","includes","heatDateConnection","format","gasDateConnection","installationCost","toLocaleString","monthlyUsageCost","Step","Steps","ChangeFurnacePage","Address","step","setStep","Calculator","FillForm","current","FillFormPage","WelcomePage","sensorResult","setSensorResult","style","zIndex","caqiPm10","placement","content","trigger","imgLanding","PrivacyPolicyPage","title","message","ContactPage","mailToLink","Content","BackContextWrapper","history","useHistory","useEffect","push","backTo","App","basename","exact","path","logo","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.adad86a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img-calculator.c9b1d6e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.b0aabfda.svg\";","module.exports = __webpack_public_path__ + \"static/media/img-person-bounds.761931d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/img-bushes.f8789c39.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.28bcf8cd.svg\";","import { DocumentContract } from '../modules/applicationWizard/ApplicationDto';\nimport { GoogleAddressIncome, StreetMediaDto } from '../shared/forms/GoogleSuggest/GoogleSuggest';\n\nexport enum HeatingType {\n  NetworkNaturalGas,\n  LiquefiedNaturalGas,\n  Biomass,\n  Electricity,\n  NetworkHeat,\n}\n\nexport enum WizardStep {\n  ApplicantDetails,\n  PropertyDetails,\n  CharacteristicsOfWorks,\n  Summary,\n}\n\nexport type AppState = {\n  address?: GoogleAddressIncome;\n  area: number;\n  heatingType?: HeatingType;\n  completedApplicationSteps: WizardStep[];\n  application: Partial<DocumentContract>;\n  media?: StreetMediaDto;\n};\n\nexport const initialState: AppState = {\n  address: undefined,\n  area: 0,\n  completedApplicationSteps: [],\n  application: {},\n};\n","import { StoreActionApi } from 'react-sweet-state';\nimport { DocumentContract } from '../modules/applicationWizard/ApplicationDto';\nimport { GoogleAddressIncome, StreetMediaDto } from '../shared/forms/GoogleSuggest/GoogleSuggest';\nimport { AppState, WizardStep } from './AppState';\n\nexport type AppStoreApi = StoreActionApi<AppState>;\n\nexport const actions = {\n  updateBaseData: (baseData: Pick<AppState, 'address' | 'area' | 'heatingType'>) => ({ setState, getState }: AppStoreApi) => {\n    setState({\n      ...getState(),\n      ...baseData,\n    });\n  },\n  setAddress: (address: GoogleAddressIncome) => ({ setState, getState }: AppStoreApi) => {\n    setState({\n      ...getState(),\n      address,\n    });\n  },\n  setAdressMedia: (addressMedia: StreetMediaDto) => ({ setState, getState }: AppStoreApi) => {\n    setState({\n      ...getState(),\n      media: addressMedia,\n    });\n  },\n  completeStep: (wizardStep: WizardStep) => ({ setState, getState }: AppStoreApi) => {\n    const { completedApplicationSteps } = getState();\n\n    if (completedApplicationSteps.indexOf(wizardStep) >= 0) {\n      return;\n    }\n\n    setState({\n      ...getState(),\n      completedApplicationSteps: [...completedApplicationSteps, wizardStep],\n    });\n  },\n  uncompleteStep: (wizardStep: WizardStep) => ({ setState, getState }: AppStoreApi) => {\n    const { completedApplicationSteps } = getState();\n\n    setState({\n      ...getState(),\n      completedApplicationSteps: completedApplicationSteps.splice(0, completedApplicationSteps.indexOf(wizardStep)),\n    });\n  },\n  updateApplication: (application: Partial<DocumentContract>) => ({ setState, getState }: AppStoreApi) => {\n    setState({\n      ...getState(),\n      application: { ...getState().application, ...application },\n    });\n  },\n};\n\nexport type Actions = typeof actions;\n","import { createStore } from 'react-sweet-state';\nimport { Actions, actions } from './AppActions';\nimport { AppState, initialState } from './AppState';\n\nexport const AppStore = createStore<AppState, Actions>({\n  initialState,\n  actions,\n});\n","import React from 'react';\nimport { createHook } from 'react-sweet-state';\nimport { AppStore } from './AppStore';\n\nconst useApp = createHook(AppStore);\n\nfunction createCtx<A>() {\n  const ctx = React.createContext<A | undefined>(undefined);\n  function useCtx() {\n    const c = React.useContext(ctx);\n    if (!c) throw new Error('useCtx must be inside a Provider with a value');\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\ntype returnUseAppType = ReturnType<typeof useApp>;\n\nconst [useAppContext, SettingProvider] = createCtx<returnUseAppType>();\n\nfunction AppProvider(props: React.PropsWithChildren<{}>) {\n  const counter = useApp();\n  return <SettingProvider value={counter} {...props} />;\n}\n\nexport { useAppContext, AppProvider };\n","export interface DocumentContract {\n  date: Date;\n  name: string;\n  addressDetails: AddressDetails;\n  correspondenceAddressDetails: AddressDetails;\n  phoneNumber: string;\n  email: string;\n  investorType: EInvestorType;\n  plannedWorkAddressDetails: PlannedWorkAddressDetails;\n  oldEnergyCharacteristics: EnergyCharacteristicsOfWork;\n  plannedEnergyCharacteristics: EnergyCharacteristicsOfWork;\n  plannedCompletionDate: Date;\n  estimatedCost: number;\n  bankDetails: BankDetails;\n  canConnectToHeatingNetwork: boolean;\n  canConnectToGasNetwork: boolean;\n  yearOfInvestment: number;\n  propertyOwnershipType: PropertyOwnershipType;\n  dispositionLawDocuments: string;\n  exectuionCompany: string;\n  nip: string;\n  isBenefitingDeMinimis: boolean;\n  lawParticipants: LawParticipant[];\n}\n\nexport interface AddressDetails {\n  streetName: string;\n  buildingNumber: string;\n  city: string;\n  postCode: string;\n}\n\nexport interface PlannedWorkAddressDetails extends AddressDetails {\n  propertyRegistrationNumber: string;\n  district: string;\n  isForCommercialUse: boolean;\n  usableArea: number;\n  commercialArea: number;\n  commercialToUsableAreaRatio: number;\n}\n\nexport interface LawParticipant {\n  name: string;\n  addressDetails: AddressDetails;\n}\n\nexport interface BankDetails {\n  name: string;\n  number: string;\n}\nexport interface EnergyCharacteristicsOfWork {\n  type: HeatingType;\n  power: number;\n  age: number;\n  consumptionPerYear: number;\n}\n\nexport enum HeatingType {\n  NetworkNaturalGas,\n  LiquefiedNaturalGas,\n  Biomass,\n  Electricity,\n  NetworkHeat,\n}\n\nexport enum PropertyOwnershipType {\n  Owner,\n  CoOwner,\n  PermanentManagement,\n  RestrictionsPropertyLaw,\n  Other,\n  PerpetualUsufruct,\n}\n\nexport enum EInvestorType {\n  Undefined,\n  PrivateIndividual,\n  Company,\n  Farmer,\n  Fisherman,\n}\n","export const routes = {\n  changeFurnace: '/zmien-piec',\n  fillForm: '/dofinansowanie',\n  applicationWizard: '/wniosek',\n  privacyPolicy: '/polityka-prywatnosci',\n  checkDetails: '/sprawdz-warunki',\n  contact: '/kontakt',\n  landing: '/',\n};\n","import * as React from 'react';\nimport { Col, Layout, Row, Space } from 'antd';\nimport './AppFooter.css';\nimport * as Icon from 'react-feather';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../../routes';\nimport logoImage from '../../static/images/logo-white.svg';\n\nconst { Footer } = Layout;\n\nexport const AppFooter = () => {\n  return (\n    <Footer className=\"AppFooter\">\n      <div className=\"AppFooter__links\">\n        <Row className=\"AppFooter__links\">\n          <Col span={6}>\n            <img src={logoImage} alt=\"\" className=\"AppFooter__logo\" />\n          </Col>\n          <Col className=\"AppFooter__item\" offset={6} span={4}>\n            <div>\n              <b>Dotacje</b>\n            </div>\n            <div>\n              <a href=\"http://zdunskawola.pl/pl/menu-mieszkancy/programy-miejskie/stop-smog\">Stop Smog</a>\n            </div>\n            <div>\n              <a href=\"https://czystepowietrze.gov.pl/\">Czyste powietrze</a>\n            </div>\n          </Col>\n          <Col className=\"AppFooter__item\" span={4}>\n            <div>\n              <b>Informacje prawne</b>\n            </div>\n            <div>\n              <Link to={routes.privacyPolicy}>Politykę prywatności</Link>\n            </div>\n            <div>\n              <a href={'https://www.zdunskawola.pl/pl/'}>Politykę cookies</a>\n            </div>\n          </Col>\n          <Col className=\"AppFooter__item\" span={4}>\n            <div>\n              <b>Bądź na bieżąco</b>\n            </div>\n            <div>\n              <a href=\"https://www.facebook.com/ZdunskaWolaNM/\">\n                <div className=\"AppFooter__iconLink\">\n                  <Icon.Facebook /> <span className=\"AppFooter__iconLinkText\">Facebook</span>\n                </div>\n              </a>\n            </div>\n          </Col>\n        </Row>\n      </div>\n\n      <div className=\"AppFooter__description\">Hackathon dla Miast</div>\n    </Footer>\n  );\n};\n","export const smoothScrollToSection = (id: string) => {\n  const section = document.getElementById(id);\n  if (section) {\n    section.scrollIntoView({\n      behavior: 'smooth',\n    });\n  }\n};","import * as React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport './AppHeader.css';\nimport { routes } from '../../routes';\nimport { smoothScrollToSection } from '../../shared/utils';\n\nconst { Header } = Layout;\n\nexport const AppHeader = (props: { logoImage: string }) => {\n  const location = useLocation();\n  React.useEffect(() => {\n    smoothScrollToSection('root');\n  }, [location.pathname]);\n  return (\n    <Header className=\"AppHeader\">\n      <div className=\"AppHeader__inner\">\n        <Link to={routes.landing} className=\"AppHeader__logo\">\n          <img src={props.logoImage} alt=\"Logo wolnych od smogu\" className=\"AppHeader__logoInner\" />\n        </Link>\n        <Menu mode=\"horizontal\" defaultSelectedKeys={[location.pathname]}>\n          <Menu.Item key={routes.changeFurnace}>\n            <Link to={routes.changeFurnace}>Kalkulator</Link>\n          </Menu.Item>\n          <Menu.Item key={routes.fillForm}>\n            <Link to={routes.fillForm}>Dofinansowanie</Link>\n          </Menu.Item>\n          <Menu.Item key={routes.contact}>\n            <Link to={routes.contact}>Kontakt</Link>\n          </Menu.Item>\n        </Menu>\n      </div>\n    </Header>\n  );\n};\n","import * as React from 'react';\nimport { Input } from 'antd';\nimport { ReactChild } from 'react';\nimport classNames from 'classnames';\nimport './InputField.css';\nimport TextArea from 'antd/lib/input/TextArea';\n\ntype Props = {\n  name: string;\n  value: string;\n  type: string;\n  onChange: (field: string, value: any, shouldValidate?: boolean) => void;\n  onFocus: (field: string, isTouched?: boolean, shouldValidate?: boolean) => void;\n  id: string;\n  children?: ReactChild;\n  className?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  error?: string;\n};\n\nexport const InputField: React.FC<Props> = ({\n  name,\n  value,\n  type,\n  onChange,\n  onFocus,\n  id,\n  className,\n  placeholder,\n  disabled,\n  children,\n  error,\n}: Props) => {\n  return (\n    <>\n      {!!children && (\n        <label className=\"InputField__label\" htmlFor={id}>\n          {children}\n        </label>\n      )}\n      {type === 'textarea' ? (\n        <TextArea\n          id={id}\n          value={value}\n          name={name}\n          rows={6}\n          onChange={(e) => onChange(name, e.target.value)}\n          onFocus={() => onFocus(name, true)}\n          className={classNames('InputField', { 'InputField--error': !!error }, className)}\n          placeholder={placeholder}\n          disabled={disabled}\n        />\n      ) : (\n        <Input\n          id={id}\n          value={value}\n          type={type}\n          name={name}\n          onChange={(e) => onChange(name, e.target.value)}\n          onFocus={() => onFocus(name, true)}\n          className={classNames('InputField', { 'InputField--error': !!error }, className)}\n          placeholder={placeholder}\n          disabled={disabled}\n        />\n      )}\n      {!!error && (\n        <div role=\"alert\" className=\"InputField__error\">\n          {error}\n        </div>\n      )}\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Radio } from 'antd';\nimport { ReactChild } from 'react';\nimport classNames from 'classnames';\nimport './RadioGroupField.css';\n\ntype Props = {\n  name: string;\n  value: string;\n  onChange: (field: string, value: any, shouldValidate?: boolean) => void;\n  id: string;\n  children?: ReactChild;\n  items: () => ReactChild;\n  className?: string;\n  disabled?: boolean;\n};\n\nexport const RadioGroupField: React.FC<Props> = ({ name, value, onChange, id, className, disabled, children, items }: Props) => {\n  return (\n    <>\n      {children && (\n        <label className={classNames('InputField__label', 'RadioGroupField__label')} htmlFor={id}>\n          {children}\n        </label>\n      )}\n      <Radio.Group\n        id={id}\n        value={value}\n        name={name}\n        onChange={(e) => onChange(name, e.target.value)}\n        className={classNames('RadioGroupField', className)}\n        disabled={disabled}\n      >\n        {items()}\n      </Radio.Group>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Form, Formik, FormikProps } from 'formik';\nimport * as Yup from 'yup';\nimport { InputField } from '../../../shared/forms/Input/InputField';\nimport '../../../shared/forms/button.css';\nimport { RadioGroupField } from '../../../shared/forms/RadioGroup/RadioGroupField';\nimport { Button, Col, Divider, Radio, Row } from 'antd';\nimport { useAppContext } from '../../../AppState/AppContext';\nimport { EInvestorType, HeatingType } from '../ApplicationDto';\nimport { first } from 'lodash';\n\ninterface IApplicantDetailsStepProps {\n  onCompleted: () => void;\n}\n\ntype FormValues = {\n  firstName: string;\n  lastName: string;\n  phoneNumber: string;\n  investorType: EInvestorType;\n  streetName: string;\n  buildingNumber: string;\n  houseNumber: string;\n  city: string;\n  bankNumber: string;\n};\n\nconst FormSchema = Yup.object().shape<FormValues>({\n  firstName: Yup.string().required(),\n  lastName: Yup.string().required(),\n  phoneNumber: Yup.string().required(),\n  investorType: Yup.number().required(),\n  streetName: Yup.string().required(),\n  buildingNumber: Yup.string().required(),\n  houseNumber: Yup.string(),\n  city: Yup.string().required(),\n  bankNumber: Yup.string().required(),\n});\n\nexport const ApplicantDetails: React.FC<IApplicantDetailsStepProps> = ({ onCompleted }) => {\n  const [state, actions] = useAppContext();\n\n  const onSubmit = (form: FormValues) => {\n    const { firstName, lastName, city, buildingNumber, streetName, bankNumber, investorType, phoneNumber } = form;\n\n    actions.updateApplication({\n      name: `${firstName} ${lastName}`,\n      date: new Date(),\n      canConnectToGasNetwork: true,\n      canConnectToHeatingNetwork: true,\n      dispositionLawDocuments: '',\n      exectuionCompany: '',\n      isBenefitingDeMinimis: false,\n      yearOfInvestment: 0,\n      addressDetails: { city, buildingNumber, streetName, postCode: '' }, //postCode: ''\n      correspondenceAddressDetails: { city, buildingNumber, streetName, postCode: '' }, //postCode: ''\n      investorType: EInvestorType.Undefined,\n      email: '', //email: ''\n      phoneNumber,\n      bankDetails: {\n        name: '', //Lack of name in form\n        number: bankNumber,\n      },\n    });\n    onCompleted();\n  };\n\n  return (\n    <section className=\"ApplicantDetails\">\n      <Formik\n        validationSchema={FormSchema}\n        validateOnMount={true}\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          phoneNumber: '',\n          investorType: EInvestorType.Undefined,\n          streetName: state.address?.street || '',\n          buildingNumber: state.address?.buildingNumber || '',\n          houseNumber: state.address?.houseNumber || '',\n          city: state.address?.city || '',\n          bankNumber: '',\n        }}\n        onSubmit={onSubmit}\n      >\n        {({ values, setFieldValue, setFieldTouched, isValid }: FormikProps<FormValues>) => (\n          <Form>\n            <InputField\n              id=\"firstName\"\n              type=\"text\"\n              value={values.firstName}\n              name=\"firstName\"\n              onChange={setFieldValue}\n              onFocus={setFieldTouched}\n            >\n              Imię\n            </InputField>\n            <InputField\n              id=\"lastName\"\n              type=\"text\"\n              value={values.lastName}\n              name=\"lastName\"\n              onChange={setFieldValue}\n              onFocus={setFieldTouched}\n            >\n              Nazwisko\n            </InputField>\n            <InputField\n              id=\"phoneNumber\"\n              type=\"text\"\n              value={values.phoneNumber}\n              name=\"phoneNumber\"\n              onChange={setFieldValue}\n              onFocus={setFieldTouched}\n            >\n              Telefon\n            </InputField>\n            <RadioGroupField\n              id=\"investorType\"\n              value={values.investorType as any}\n              name=\"investorType\"\n              onChange={setFieldValue}\n              items={() => (\n                <>\n                  <Row>\n                    <Radio value={EInvestorType.Undefined}>Brak</Radio>\n                  </Row>\n                  <Row>\n                    <Radio value={EInvestorType.PrivateIndividual}>Działalność gospodarcza</Radio>\n                  </Row>\n                  <Row>\n                    <Radio value={EInvestorType.Farmer}>Działalność rolnicza</Radio>\n                  </Row>\n                  <Row>\n                    <Radio value={EInvestorType.Fisherman}>Działalność w zakresie rybołówstwa i akwakultury</Radio>\n                  </Row>\n                </>\n              )}\n            >\n              Rodzaj prowadzonej działalności\n            </RadioGroupField>\n            <Divider />\n            <h5 className=\"ApplicationWizard__subtitle\">Lokalizacja planowanych prac</h5>\n            <InputField\n              id=\"streetName\"\n              type=\"text\"\n              value={values.streetName}\n              name=\"streetName\"\n              onChange={setFieldValue}\n              onFocus={setFieldTouched}\n            >\n              Ulica\n            </InputField>\n            <Row gutter={24}>\n              <Col span={12}>\n                <InputField\n                  id=\"buildingNumber\"\n                  type=\"text\"\n                  value={values.buildingNumber}\n                  name=\"buildingNumber\"\n                  onChange={setFieldValue}\n                  onFocus={setFieldTouched}\n                >\n                  Numer budynku\n                </InputField>\n              </Col>\n              <Col span={12}>\n                <InputField\n                  id=\"houseNumber\"\n                  type=\"text\"\n                  value={values.houseNumber}\n                  name=\"houseNumber\"\n                  onChange={setFieldValue}\n                  onFocus={setFieldTouched}\n                >\n                  Numer lokalu\n                </InputField>\n              </Col>\n            </Row>\n            <InputField id=\"city\" type=\"text\" value={values.city} name=\"city\" onChange={setFieldValue} onFocus={setFieldTouched}>\n              Miejscowość\n            </InputField>\n            <Divider />\n            <h5 className=\"ApplicationWizard__subtitle\">Rachunek bankowy wnioskodawcy</h5>\n            <InputField\n              id=\"bankNumber\"\n              type=\"text\"\n              value={values.bankNumber}\n              name=\"bankNumber\"\n              onChange={setFieldValue}\n              onFocus={setFieldTouched}\n            >\n              Numer rachunku\n            </InputField>\n            <Row>\n              <Col offset={14} span={10}>\n                <Button disabled={!isValid} className=\"Button\" type=\"primary\" htmlType=\"submit\">\n                  Dalej\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        )}\n      </Formik>\n    </section>\n  );\n};\n","import { Col, Row, Steps } from 'antd';\nimport * as React from 'react';\nimport { FillFormStep } from '../shared/fillFormStep/FillFormStep';\nimport { AddressStep } from './addressStep/AddressStep';\nimport './ChangeFurnacePage.css';\nimport './StepBase.css';\nimport { CalculatorStep } from './calculatorStep/CalculatorStep';\nimport { HeatingType } from '../../AppState/AppState';\nimport { smoothScrollToSection } from '../../shared/utils';\n\nenum ChangeFurnaceStep {\n  Address,\n  Calculator,\n  FillForm,\n}\n\nconst { Step } = Steps;\n\nexport const ChangeFurnacePage = () => {\n  const [step, setStep] = React.useState<ChangeFurnaceStep>(ChangeFurnaceStep.Address);\n  const availableTypes = [\n    HeatingType.NetworkNaturalGas,\n    HeatingType.LiquefiedNaturalGas,\n    HeatingType.Electricity,\n    HeatingType.Biomass,\n    HeatingType.NetworkHeat,\n  ]; // TODO: use state\n\n  const goToNextStep = () => {\n    if (step === ChangeFurnaceStep.Address) {\n      setStep(ChangeFurnaceStep.Calculator);\n    }\n\n    if (step === ChangeFurnaceStep.Calculator) {\n      setStep(ChangeFurnaceStep.FillForm);\n    }\n\n    smoothScrollToSection('steps');\n  };\n\n  return (\n    <section className=\"StepBase ChangeFurnacePage\">\n      <div className=\"StepBase__inner\">\n        <div id=\"steps\" className=\"ChangeFurnacePage__steps\">\n          <Row>\n            <Col offset={4} span={8}>\n              <Steps current={step}>\n                <Step />\n                <Step />\n                <Step />\n              </Steps>\n            </Col>\n          </Row>\n        </div>\n\n        {step === ChangeFurnaceStep.Address && <AddressStep goToNextStep={goToNextStep} />}\n        {step === ChangeFurnaceStep.Calculator && <CalculatorStep goToNextStep={goToNextStep} availableTypes={availableTypes} />}\n        {step === ChangeFurnaceStep.FillForm && <FillFormStep />}\n      </div>\n    </section>\n  );\n};\n","import * as React from 'react';\nimport { Form, Formik, FormikProps } from 'formik';\nimport * as Yup from 'yup';\nimport { InputField } from '../../../shared/forms/Input/InputField';\nimport '../../../shared/forms/button.css';\nimport { RadioGroupField } from '../../../shared/forms/RadioGroup/RadioGroupField';\nimport { Button, Col, Radio, Row, Divider } from 'antd';\nimport { useAppContext } from '../../../AppState/AppContext';\nimport { PropertyOwnershipType } from '../ApplicationDto';\n\ninterface IPropertyDetailsStepProps {\n  onCompleted: () => void;\n}\n\ntype FormValues = {\n  propertyRegistrationNumber: string;\n  district: string;\n  buildingArea: string;\n  propertyOwnershipType: number;\n};\n\nconst FormSchema = Yup.object().shape<FormValues>({\n  propertyRegistrationNumber: Yup.string().required(),\n  district: Yup.string().required(),\n  buildingArea: Yup.string(),\n  propertyOwnershipType: Yup.number().required(),\n});\n\nexport const PropertyDetails: React.FC<IPropertyDetailsStepProps> = ({ onCompleted }) => {\n  const [state, actions] = useAppContext();\n\n  const onSubmit = (form: FormValues) => {\n    const { propertyRegistrationNumber, district } = form;\n    actions.updateApplication({\n      propertyOwnershipType: PropertyOwnershipType.Owner,\n      plannedWorkAddressDetails: {\n        commercialArea: 0, //lack\n        usableArea: 0, //lack\n        commercialToUsableAreaRatio: 0, //lack\n        isForCommercialUse: false, //lack\n        propertyRegistrationNumber,\n        streetName: '',\n        buildingNumber: '',\n        city: '',\n        postCode: '',\n        district,\n      },\n      lawParticipants: [],\n    });\n    onCompleted();\n  };\n\n  return (\n    <section className=\"PropertyDetails\">\n      <Formik\n        validationSchema={FormSchema}\n        validateOnMount={true}\n        initialValues={{\n          propertyRegistrationNumber: '',\n          district: '',\n          buildingArea: state.area.toString() || '',\n          propertyOwnershipType: PropertyOwnershipType.Owner,\n        }}\n        onSubmit={onSubmit}\n      >\n        {({ values, setFieldValue, setFieldTouched, isValid }: FormikProps<FormValues>) => (\n          <Form>\n            <InputField\n              id=\"propertyRegistrationNumber\"\n              type=\"text\"\n              value={values.propertyRegistrationNumber}\n              name=\"propertyRegistrationNumber\"\n              onChange={setFieldValue}\n              onFocus={setFieldTouched}\n            >\n              Numer ewidencyjny działki\n            </InputField>\n            <InputField\n              id=\"district\"\n              type=\"text\"\n              value={values.district}\n              name=\"district\"\n              onChange={setFieldValue}\n              onFocus={setFieldTouched}\n            >\n              Obręb działki\n            </InputField>\n            <Divider />\n            <RadioGroupField\n              id=\"propertyOwnershipType\"\n              value={values.propertyOwnershipType + ''}\n              name=\"propertyOwnershipType\"\n              onChange={setFieldValue}\n              items={() => (\n                <>\n                  <Row>\n                    <Col span={8}>\n                      <Radio value={PropertyOwnershipType.Owner + ''}>Własność</Radio>\n                    </Col>\n                    <Col span={8}>\n                      <Radio value={PropertyOwnershipType.CoOwner + ''}>Współwłasność</Radio>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col span={8}>\n                      <Radio value={PropertyOwnershipType.RestrictionsPropertyLaw + ''}>Użytkowanie wieczyste</Radio>\n                    </Col>\n                    <Col span={8}>\n                      <Radio value={PropertyOwnershipType.PermanentManagement + ''}>Trwały zarząd</Radio>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col span={8}>\n                      <Radio value={PropertyOwnershipType.RestrictionsPropertyLaw + ''}>Ograniczone prawo rzeczowe</Radio>\n                    </Col>\n                    <Col span={8}>\n                      <Radio value={PropertyOwnershipType.Other + ''}>Inny</Radio>\n                    </Col>\n                  </Row>\n                </>\n              )}\n            >\n              Tytuł własności nieruchomości\n            </RadioGroupField>\n            <Row>\n              <Col offset={14} span={10}>\n                <Button disabled={!isValid} className=\"Button\" type=\"primary\" htmlType=\"submit\">\n                  Dalej\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        )}\n      </Formik>\n    </section>\n  );\n};\n","import * as React from 'react';\nimport { ReactChild } from 'react';\nimport { DatePicker } from 'antd';\nimport classNames from 'classnames';\nimport './DatePickerField.css';\nimport moment from 'moment';\nimport 'moment/locale/pl';\nimport locale from 'antd/es/date-picker/locale/pl_PL';\n\ntype Props = {\n  name: string;\n  value: string;\n  onChange: (field: string, value: any, shouldValidate?: boolean) => void;\n  onFocus: (field: string, isTouched?: boolean, shouldValidate?: boolean) => void;\n  id: string;\n  children?: ReactChild;\n  className?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  error?: string;\n};\n\nexport const DatePickerField: React.FC<Props> = ({\n  name,\n  value,\n  onChange,\n  onFocus,\n  id,\n  className,\n  placeholder,\n  disabled,\n  children,\n  error,\n}: Props) => {\n  return (\n    <>\n      {!!children && (\n        <label className=\"DatePickerField__label\" htmlFor={id}>\n          {children}\n        </label>\n      )}\n      <DatePicker\n        picker=\"month\"\n        locale={locale}\n        id={id}\n        value={moment(value || new Date())}\n        onChange={(e) => onChange(name, e)}\n        onFocus={() => onFocus(name, true)}\n        className={classNames('DatePickerField', { 'DatePickerField--error': !!error }, className)}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n      {!!error && (\n        <div role=\"alert\" className=\"DatePickerField__error\">\n          {error}\n        </div>\n      )}\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Form, Formik, FormikProps } from 'formik';\nimport * as Yup from 'yup';\nimport { InputField } from '../../../shared/forms/Input/InputField';\nimport '../../../shared/forms/button.css';\nimport { RadioGroupField } from '../../../shared/forms/RadioGroup/RadioGroupField';\nimport { Button, Col, Radio, Row, Divider } from 'antd';\nimport { useAppContext } from '../../../AppState/AppContext';\nimport { SelectField } from '../../../shared/forms/Select/SelectField';\nimport { DatePickerField } from '../../../shared/forms/DatePicker/DatePickerField';\nimport { HeatingType } from '../ApplicationDto';\n\ninterface IPropertyDetailsStepProps {\n  onCompleted: () => void;\n}\n\ntype FormValues = {\n  oldType: string;\n  oldAge: number;\n  oldPower: number;\n  oldConsumption: number;\n  plannedType: HeatingType;\n  plannedPower: number;\n  plannedConsumption: number;\n  plannedCompletionDate: string;\n  estimatedCost: number;\n};\n\nconst FormSchema = Yup.object().shape<FormValues>({\n  oldType: Yup.string().required(),\n  oldAge: Yup.number().required(),\n  oldPower: Yup.number().required(),\n  oldConsumption: Yup.number().required(),\n  plannedType: Yup.number().required(),\n  plannedPower: Yup.number().required(),\n  plannedConsumption: Yup.number().required(),\n  plannedCompletionDate: Yup.string().required(),\n  estimatedCost: Yup.number().required(),\n});\n\nexport const CharacteristicsOfWorks: React.FC<IPropertyDetailsStepProps> = ({ onCompleted }) => {\n  const [state, actions] = useAppContext();\n\n  const onSubmit = (form: FormValues) => {\n    const {\n      oldType,\n      oldAge,\n      oldPower,\n      oldConsumption,\n      plannedType,\n      plannedCompletionDate,\n      plannedConsumption,\n      plannedPower,\n      estimatedCost,\n    } = form;\n\n    actions.updateApplication({\n      oldEnergyCharacteristics: {\n        // type: oldType,\n        type: HeatingType.LiquefiedNaturalGas,\n        power: Number.parseInt(oldPower + ''),\n        age: Number.parseInt(oldAge + ''),\n        consumptionPerYear: Number.parseInt(oldConsumption + ''),\n      },\n      plannedEnergyCharacteristics: {\n        type: Number.parseInt(plannedType + ''),\n        power: Number.parseInt(plannedPower + ''),\n        age: 0,\n        consumptionPerYear: Number.parseInt(plannedConsumption + ''),\n      },\n      plannedCompletionDate: new Date(plannedCompletionDate),\n      estimatedCost: Number.parseInt(estimatedCost + ''),\n    });\n\n    onCompleted();\n  };\n\n  return (\n    <section className=\"PropertyDetails\">\n      <Formik\n        validationSchema={FormSchema}\n        validateOnMount={true}\n        initialValues={{\n          oldType: '',\n          oldAge: 0,\n          oldPower: 0,\n          oldConsumption: 0,\n          plannedType: HeatingType.NetworkNaturalGas,\n          plannedPower: 0,\n          plannedConsumption: 0,\n          plannedCompletionDate: '',\n          estimatedCost: 0,\n        }}\n        onSubmit={onSubmit}\n      >\n        {({ values, setFieldValue, setFieldTouched, isValid }: FormikProps<FormValues>) => (\n          <Form>\n            <h5 className=\"ApplicationWizard__subtitle\">Dotychczasowe źródło ciepła</h5>\n            <InputField id=\"oldType\" type=\"text\" value={values.oldType} name=\"oldType\" onChange={setFieldValue} onFocus={setFieldTouched}>\n              Rodzaj\n            </InputField>\n            <InputField id=\"oldAge\" type=\"text\" value={values.oldAge + ''} name=\"oldAge\" onChange={setFieldValue} onFocus={setFieldTouched}>\n              Wiek\n            </InputField>\n            <InputField\n              id=\"oldPower\"\n              type=\"text\"\n              value={values.oldPower + ''}\n              name=\"oldPower\"\n              onChange={setFieldValue}\n              onFocus={setFieldTouched}\n            >\n              Moc\n            </InputField>\n            <InputField\n              id=\"oldConsumption\"\n              type=\"text\"\n              value={values.oldConsumption + ''}\n              name=\"oldConsumption\"\n              onChange={setFieldValue}\n              onFocus={setFieldTouched}\n            >\n              Roczne zużycie paliw\n            </InputField>\n            <Divider />\n            <h5 className=\"ApplicationWizard__subtitle\">Planowane źródło ciepła</h5>\n            <RadioGroupField\n              id=\"plannedType\"\n              value={values.plannedType as any}\n              name=\"plannedType\"\n              onChange={setFieldValue}\n              items={() => (\n                <>\n                  <Row>\n                    <Col span={8}>\n                      <Radio value={HeatingType.NetworkHeat}>Sieć ciepłownicza</Radio>\n                    </Col>\n                    <Col span={8}>\n                      <Radio value={HeatingType.NetworkNaturalGas}>Sieć gazowa</Radio>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col span={8}>\n                      <Radio value={HeatingType.LiquefiedNaturalGas}>Gaz płynny (zbiornik)</Radio>\n                    </Col>\n                    <Col span={8}>\n                      <Radio value={HeatingType.Electricity}>Energia elektryczna</Radio>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col span={8}>\n                      <Radio value={HeatingType.Biomass}>Biomasa</Radio>\n                    </Col>\n                  </Row>\n                  <InputField\n                    id=\"plannedPower\"\n                    type=\"text\"\n                    value={values.plannedPower + ''}\n                    name=\"plannedPower\"\n                    onChange={setFieldValue}\n                    onFocus={setFieldTouched}\n                  >\n                    Moc\n                  </InputField>\n                  <InputField\n                    id=\"plannedConsumption\"\n                    type=\"text\"\n                    value={values.plannedConsumption + ''}\n                    name=\"plannedConsumption\"\n                    onChange={setFieldValue}\n                    onFocus={setFieldTouched}\n                  >\n                    Planowane roczne zużycie paliw\n                  </InputField>\n                  <Divider />\n                  <DatePickerField\n                    id=\"plannedCompletionDate\"\n                    value={values.plannedCompletionDate}\n                    name=\"plannedCompletionDate\"\n                    onChange={setFieldValue}\n                    onFocus={setFieldTouched}\n                  >\n                    Planowany termin zakończenia prac objętych wnioskiem\n                  </DatePickerField>\n                  <InputField\n                    id=\"estimatedCost\"\n                    type=\"text\"\n                    value={values.estimatedCost + ''}\n                    name=\"estimatedCost\"\n                    onChange={setFieldValue}\n                    onFocus={setFieldTouched}\n                  >\n                    Szacunkowy koszt przedsięwzięcia w zł\n                  </InputField>\n                </>\n              )}\n            >\n              Tytuł własności nieruchomości\n            </RadioGroupField>\n            <Row>\n              <Col offset={14} span={10}>\n                <Button disabled={!isValid} className=\"Button\" type=\"primary\" htmlType=\"submit\">\n                  Dalej\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        )}\n      </Formik>\n    </section>\n  );\n};\n","import { Col, Row, Collapse, Button } from 'antd';\nimport * as React from 'react';\nimport * as Icon from 'react-feather';\nimport { useAppContext } from '../../AppState/AppContext';\nimport { WizardStep } from '../../AppState/AppState';\nimport './ApplicationWizard.css';\nimport { ApplicantDetails } from './applicantDetails/ApplicantDetails';\nimport { PropertyDetails } from './propertyDetails/PropertyDetails';\nimport { CharacteristicsOfWorks } from './characteristicsOfWorks/CharacteristicsOfWorks';\nimport axios, { AxiosResponse } from 'axios';\nimport { DocumentContract } from './ApplicationDto';\nimport { apiUrl } from '../../App';\n\nconst { Panel } = Collapse;\n\nexport const ApplicationWizard = () => {\n  const [activeStep, setActiveStep] = React.useState<WizardStep>(WizardStep.ApplicantDetails);\n  const [state, actions] = useAppContext();\n  const isCompleted = (wizardStep: WizardStep) => state.completedApplicationSteps.indexOf(wizardStep) >= 0;\n\n  React.useEffect(() => {\n    if (state.completedApplicationSteps.length === 0) return;\n\n    setActiveStep(state.completedApplicationSteps[state.completedApplicationSteps.length - 1] + 1);\n  }, [state.completedApplicationSteps.length]);\n\n  const generateApplication = async () => {\n    const x = await axios.post<DocumentContract, AxiosResponse<Blob>>(`${apiUrl}/forms`, state.application, { responseType: 'blob' });\n\n    const url = window.URL.createObjectURL(new Blob([x.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'wniosek.zip');\n    document.body.appendChild(link);\n    link.click();\n  };\n\n  return (\n    <div className=\"ApplicationWizard\">\n      <Row>\n        <Col offset={4} span={16}>\n          <h1 className=\"ApplicationWizard__title\">Stop smog w Zduńskiej Woli</h1>\n          <p className=\"ApplicationWizard__description\">\n            Wniosek o udzielenie dofinansowania na wymianę pieców węglowych na ekologiczne źródła ogrzewania\n          </p>\n          <Collapse\n            accordion\n            activeKey={[activeStep]}\n            onChange={(key) => {\n              key && setActiveStep(Number(key));\n            }}\n            ghost\n          >\n            <Panel\n              header={\n                <div className=\"ApplicationWizard__panelHeader\">\n                  <div>\n                    <Icon.User /> Dane wnioskodawcy\n                  </div>\n                  {isCompleted(WizardStep.ApplicantDetails) && <Icon.Check />}\n                </div>\n              }\n              key={WizardStep.ApplicantDetails}\n            >\n              <ApplicantDetails\n                onCompleted={() => {\n                  isCompleted(WizardStep.ApplicantDetails)\n                    ? actions.uncompleteStep(WizardStep.ApplicantDetails)\n                    : actions.completeStep(WizardStep.ApplicantDetails);\n                }}\n              />\n            </Panel>\n            <Panel\n              header={\n                <div className=\"ApplicationWizard__panelHeader\">\n                  <div>\n                    <Icon.Home /> Dane nieruchomości\n                  </div>\n                  {isCompleted(WizardStep.PropertyDetails) && <Icon.Check />}\n                </div>\n              }\n              key={WizardStep.PropertyDetails}\n              disabled={!isCompleted(WizardStep.ApplicantDetails)}\n            >\n              <PropertyDetails\n                onCompleted={() => {\n                  isCompleted(WizardStep.PropertyDetails)\n                    ? actions.uncompleteStep(WizardStep.PropertyDetails)\n                    : actions.completeStep(WizardStep.PropertyDetails);\n                }}\n              />\n            </Panel>\n            <Panel\n              header={\n                <div className=\"ApplicationWizard__panelHeader\">\n                  <div>\n                    <Icon.Tool /> Charakterystyka prac\n                  </div>\n                  {isCompleted(WizardStep.CharacteristicsOfWorks) && <Icon.Check />}\n                </div>\n              }\n              key={WizardStep.CharacteristicsOfWorks}\n              disabled={!isCompleted(WizardStep.PropertyDetails)}\n            >\n              <CharacteristicsOfWorks\n                onCompleted={() => {\n                  isCompleted(WizardStep.CharacteristicsOfWorks)\n                    ? actions.uncompleteStep(WizardStep.CharacteristicsOfWorks)\n                    : actions.completeStep(WizardStep.CharacteristicsOfWorks);\n                }}\n              />\n            </Panel>\n            <Panel\n              header={\n                <div className=\"ApplicationWizard__panelHeader\">\n                  <div>\n                    <Icon.File /> Podsumowanie\n                  </div>\n                  {isCompleted(WizardStep.Summary) && <Icon.Check />}\n                </div>\n              }\n              key={WizardStep.Summary}\n              disabled={!isCompleted(WizardStep.CharacteristicsOfWorks)}\n            >\n              <div className=\"ApplicationWizard__summary\">\n                <h5 className=\"ApplicationWizard__subtitle\">Twój wniosek jest gotowy</h5>\n                <p>\n                  Podpisany wniosek wraz z wszystkimi załącznikami złóż w Kancelarii Urzędu Miasta (budynek nr 2) przy ul. Złotnickiego 12.\n                </p>\n\n                <Row>\n                  <Col offset={14} span={10}>\n                    <Button\n                      className=\"Button\"\n                      type=\"primary\"\n                      onClick={async () => {\n                        await generateApplication();\n                      }}\n                    >\n                      Pobierz wypełniony wniosek\n                    </Button>\n                  </Col>\n                </Row>\n              </div>\n            </Panel>\n          </Collapse>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import { Col, Row } from 'antd';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../../../routes';\nimport './FillFormStep.css';\n\nexport const FillFormStep = () => {\n  return (\n    <div className=\"FillFormStep\">\n      <Row>\n        <Col offset={4} span={16}>\n          <h1 className=\"FillFormStep__title\">Stop smog w Zduńskiej Woli</h1>\n          <p className=\"FillFormStep__description\">Nawet do 5 000 zł dofinansowania na wymianę pieców węglowych</p>\n\n          <section className=\"FillFormStep__section\">\n            <h1 className=\"FillFormStep__sectionTitle\">Kto może wystąpić o dotację?</h1>\n            <ul className=\"FillFormStep__sectionList\">\n              <li>osoby fizyczne</li>\n              <li>wspólnony mieszkaniowe</li>\n              <li>przedsiębiorcy</li>\n              <li>osoby prawne</li>\n              <li>jednostki sektora finansów publicznych</li>\n            </ul>\n            <span>\n              dysponujące prawem własności, współwłasności lub użytkowania wieczystego do położonej w naszym mieście nieruchomości, w której\n              zainstalowano piec węglowy\n            </span>\n          </section>\n\n          <section className=\"FillFormStep__section\">\n            <h1 className=\"FillFormStep__sectionTitle\">Na co można przeznaczyć dotację?</h1>\n            <span>Przyznane środki możesz przeznaczyć na wymianę pieca opalanego węglem na:</span>\n            <ul className=\"FillFormStep__sectionList\">\n              <li>kocioł na biomase</li>\n              <li>kocioł na płynny gaz</li>\n              <li>ogrzewanie elektryczne</li>\n              <li>przyłączenie budynku do sieci ciepłowniczej</li>\n              <li>podłączenie budynku do sieci gazowej</li>\n            </ul>\n            <span>\n              dysponujące prawem własności, współwłasności lub użytkowania wieczystego do położonej w naszym mieście nieruchomości, w której\n              zainstalowano piec węglowy\n            </span>\n          </section>\n\n          <p>\n            Więcej informacji znajdziesz w{' '}\n            <a\n              target=\"blank\"\n              href=\"http://zdunskawola.pl/pl/aktualnosci/1494-stop-smog-mamy-nowy-regulamin-przyznawania-dotacji-na-wymiane-piecow-weglowych\"\n            >\n              Regulaminie przyznawania dotacji\n            </a>\n          </p>\n          <div className=\"FillFormStep__buttons\">\n            <Link className=\"LinkAsButton\" to={routes.applicationWizard}>\n              Wypełnij wniosek\n            </Link>\n            <a className=\"LinkAsButton--outline\" target=\"blank\" href=\"http://zdunskawola.pl/images/luty_2020/Wniosek_z_zalacznikami.pdf\">\n              Pobierz pdf\n            </a>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport './GoogleSuggest.css';\nconst MY_API_KEY = 'AIzaSyDp5Jmo11YFwQY14Fts4d8kH1S1dVauHug';\n\nexport interface StreetMediaDto {\n  hasGasConnection: boolean;\n  hasHeatConnection: boolean;\n  gasDateConnection: Date;\n  heatDateConnection: Date;\n}\n\nexport type GoogleAddressIncome = {\n  country: string;\n  city: string;\n  street: string;\n  buildingNumber: string;\n  houseNumber: string;\n};\n\ntype GoogleSuggestProps = {\n  onSelect: (value: GoogleAddressIncome) => void;\n  placeholder: string;\n};\n\nexport const GoogleSuggest = (props: GoogleSuggestProps) => {\n  const [address, setAddress] = React.useState<any>();\n\n  React.useEffect(() => {\n    if (!address) {\n      return;\n    }\n\n    const terms = address.value.terms;\n    if (terms.length === 3) {\n      const streetTemp = terms[0].value.split(' ');\n      const street = streetTemp[0];\n      const city = terms[1].value;\n      const country = terms[2].value;\n      let buildingNumber, houseNumber;\n      if (streetTemp[1]) {\n        const buildingTemp = streetTemp[1].split('/');\n        buildingNumber = buildingTemp[0];\n        houseNumber = buildingTemp[1];\n      }\n\n      props.onSelect({ street, city, country, buildingNumber, houseNumber });\n    }\n\n    if (terms.length === 4) {\n      const street = terms[0].value;\n      const city = terms[2].value;\n      const country = terms[3].value;\n      let buildingNumber, houseNumber;\n      if (terms[1].value) {\n        const buildingTemp = terms[1].value.split('/');\n        buildingNumber = buildingTemp[0];\n        houseNumber = buildingTemp[1];\n      }\n\n      props.onSelect({ street, city, country, buildingNumber, houseNumber });\n    }\n  }, [address]);\n\n  return (\n    <div className=\"GoogleSuggest\">\n      <label htmlFor=\"react-select-2-input\" className=\"visuallyHidden\">\n        Wpisz swój adres\n      </label>\n      <GooglePlacesAutocomplete\n        apiKey={MY_API_KEY}\n        autocompletionRequest={{\n          componentRestrictions: {\n            country: 'pl',\n          },\n          radius: 2500,\n          location: { lat: 51.599252, lng: 18.940955 },\n        }}\n        selectProps={{\n          placeholder: props.placeholder,\n          value: address,\n          noOptionsMessage: () => 'Wybacz ale nie jestem wstanie znaleźć adresu - spróbuj wyszukać w formacje np. Cicha 12, Zduńska Wola',\n          loadingMessage: () => 'Szukam wyników',\n          onChange: setAddress,\n          filterOption: (option: any) => {\n            return option.label.indexOf('Zduńska') > 0;\n          },\n        }}\n      />\n    </div>\n  );\n};\n","import { Button, Checkbox, Col, Input, Row } from 'antd';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useAppContext } from '../../../AppState/AppContext';\nimport { GoogleAddressIncome, GoogleSuggest, StreetMediaDto } from '../../../shared/forms/GoogleSuggest/GoogleSuggest';\nimport './AddressStep.css';\nimport '../../../shared/forms/consent.css';\nimport '../../../shared/forms/button.css';\nimport { routes } from '../../../routes';\nimport imgCalculator from '../../../static/images/img-calculator.svg';\nimport { apiUrl } from '../../../App';\n\ninterface IAddressStepProps {\n  goToNextStep: () => void;\n}\n\nexport const AddressStep: React.FC<IAddressStepProps> = (props) => {\n  const [isPrivacyPolicyAccepted, setPrivacyPolicy] = React.useState(false);\n\n  const [state, actions] = useAppContext();\n\n  const handleSubmitAdress = async () => {\n    const street = state?.address?.street ?? '';\n    const x = await axios.get<StreetMediaDto>(`${apiUrl}/StreetMedia?streetName=${street}`);\n    actions.setAdressMedia(x.data);\n    props.goToNextStep();\n  };\n\n  return (\n    <div className=\"AddressStep\">\n      <Row>\n        <Col offset={4} span={16}>\n          <h1 className=\"AddressStep__title\">Zadbaj o powietrze w Zduńskiej Woli</h1>\n          <p className=\"AddressStep__description\">Podaj swój adres i sprawdź możliwość zmiany źródła ogrzewania</p>\n          <div className=\"Consent\">\n            <Checkbox onChange={(e) => setPrivacyPolicy(e.target.checked)}>\n              Znam i akcjeptuję <Link to={routes.privacyPolicy}>Politykę prywatności</Link>\n            </Checkbox>\n          </div>\n          <Row>\n            <Col span={18}>\n              <GoogleSuggest\n                placeholder=\"Wpisz swój adres, np. Cicha 12, Zduńska Wola\"\n                onSelect={(value: GoogleAddressIncome) => actions.setAddress(value)}\n              />\n            </Col>\n            <Col span={6}>\n              <Button\n                disabled={!(isPrivacyPolicyAccepted && !!state.address)}\n                onClick={() => handleSubmitAdress()}\n                className=\"Button\"\n                type=\"primary\"\n              >\n                Sprawdź\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <img className=\"AddressStep__messageImage\" src={imgCalculator} alt=\"\" />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { Form, Formik, FormikProps, useFormikContext } from 'formik';\nimport * as Yup from 'yup';\nimport { InputField } from '../../../shared/forms/Input/InputField';\nimport { HeatingType } from '../../../AppState/AppState';\nimport axios from 'axios';\nimport { Line } from '@reactchartjs/react-chart.js';\nimport { range, chunk, sum, max, min } from 'lodash';\nimport { Button, Col, Row } from 'antd';\nimport './CalculatorStep.css';\nimport '../../../shared/forms/button.css';\nimport * as Icon from 'react-feather';\nimport classNames from 'classnames';\nimport { useAppContext } from '../../../AppState/AppContext';\nimport imgCalculator from '../../../static/images/img-calculator.svg';\nimport { apiUrl } from '../../../App';\nimport { smoothScrollToSection } from '../../../shared/utils';\nimport moment from 'moment';\n\ninterface ICalculatorStepProps {\n  goToNextStep: () => void;\n  availableTypes: HeatingType[];\n}\n\nconst initialFormValues = {\n  buildingArea: 50,\n  heatingType: 'LiquefiedNaturalGas',\n};\n\ntype FormValues = typeof initialFormValues;\n\nconst FormSchema = Yup.object().shape<FormValues>({\n  buildingArea: Yup.number().required('Powierzchnia budynku jest wymagana').min(20, 'Minimalna wartośc to 20'),\n  heatingType: Yup.string().required(),\n});\n\ninterface CalculateCostsDto {\n  installationCost: number;\n  monthlyUsageCost: number;\n  reports: ReportHeatingType[];\n}\n\ninterface ReportHeatingType {\n  type: string;\n  costRecords: HeatingCostRecord[];\n}\n\ninterface HeatingCostRecord {\n  date: string;\n  cost: number;\n}\n\nconst FormikNextStateListener = () => {\n  const { values, submitForm } = useFormikContext();\n  React.useEffect(() => {\n    submitForm();\n  }, [values]);\n\n  return null;\n};\n\nexport const CalculatorStep: React.FC<ICalculatorStepProps> = ({ availableTypes, goToNextStep }) => {\n  const [results, setResults] = React.useState<CalculateCostsDto>();\n  const [heatingType, setHeatingType] = React.useState<string>();\n  const [state] = useAppContext();\n\n  const filteredHeatTypes = availableTypes.filter((x) => {\n    if (x === HeatingType.NetworkHeat) {\n      return state.media?.hasHeatConnection || false;\n    }\n\n    if (x === HeatingType.NetworkNaturalGas) {\n      return state.media?.hasGasConnection || false;\n    }\n\n    return true;\n  });\n\n  const data = {\n    labels: range(0, 15),\n    datasets:\n      results?.reports.map((x, index) => {\n        return {\n          label: x.type,\n          data: x.costRecords.map((y) => y.cost),\n          fill: false,\n          backgroundColor: x.type === heatingType ? '#2745D9' : '#8A99A8',\n          borderColor: x.type === heatingType ? '#2745D9' : '#8A99A8',\n          yAxisID: 'y-axis-' + index,\n        };\n      }) || [],\n  };\n\n  const options = {\n    scales: {\n      yAxes: results?.reports.map((x, index) => {\n        return {\n          type: 'linear',\n          display: index === 0,\n          position: 'left',\n          id: 'y-axis-' + index,\n          ticks: {\n            beginAtZero: true, // minimum value will be 0.\n            suggestedMax: 45000,\n          },\n          gridLines: {\n            display: false,\n          },\n        };\n      }),\n      xAxes: [\n        {\n          ticks: {\n            autoSkip: true,\n            maxTicksLimit: 20,\n            callback: function (value: any) {\n              return 2020 + value;\n            },\n          },\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n    },\n    legend: {\n      display: false,\n    },\n  };\n\n  const onSubmit = (form: FormValues) => {\n    if (form.buildingArea && form.heatingType) {\n      axios.get<CalculateCostsDto>(`${apiUrl}/calculator?buildingArea=${form.buildingArea}&heatingType=${form.heatingType}`).then((x) => {\n        setResults(x.data);\n        setHeatingType(form.heatingType);\n      });\n    }\n  };\n\n  const getPriceAfterGrant = (price: number) => {\n    const grantAmount = min([5000, price / 2]) || 0;\n    const newPrice = price - grantAmount;\n    return newPrice.toLocaleString();\n  };\n\n  return (\n    <section className=\"CalculatorStep\">\n      <div className=\"CalculatorStep__message\">\n        <Row>\n          <Col offset={4} span={16}>\n            <h1 className=\"CalculatorStep__messageTitle\">Świetna wiadomość!</h1>\n            <p className=\"CalculatorStep__messageDescription\">\n              W Twojej okolicy możesz skorzystać z <strong>{filteredHeatTypes.length} alternatywnych źródeł ogrzewania</strong>\n            </p>\n            <h2 className=\"CalculatorStep__messageSubTitle\">Ile to kosztuje?</h2>\n            <p className=\"CalculatorStep__messageDescription\">\n              Skorzystaj z <strong>kalkulatora</strong> kosztów ogrzewania, aby wybrać najlepsze rozwiązanie dla siebie\n            </p>\n            <Button\n              className=\"Button\"\n              type=\"primary\"\n              onClick={() => {\n                smoothScrollToSection('calculator');\n              }}\n            >\n              Przejdź do kalkulatora\n            </Button>\n          </Col>\n        </Row>\n        <img className=\"CalculatorStep__messageImage\" src={imgCalculator} alt=\"\" />\n      </div>\n      <div id=\"calculator\" className=\"CalculatorStep__messageFooter\" />\n      <div className=\"CalculatorStep__calculator\">\n        <Row>\n          <Col offset={4} span={16}>\n            <Formik validationSchema={FormSchema} initialValues={initialFormValues} onSubmit={onSubmit}>\n              {({ values, setFieldValue, setFieldTouched, errors }: FormikProps<FormValues>) => {\n                return (\n                  <Form>\n                    <FormikNextStateListener />\n                    <div className=\"CalculatorStep__buildingArea\">\n                      <InputField\n                        id=\"BuildingArea\"\n                        type=\"number\"\n                        value={values.buildingArea + ''}\n                        name=\"buildingArea\"\n                        onChange={setFieldValue}\n                        onFocus={setFieldTouched}\n                        error={errors.buildingArea}\n                      >\n                        Podaj powierzchnię budynku w &#x33A1;\n                      </InputField>\n                    </div>\n                    <div className=\"CalculatorStep__heatingType\">\n                      <Row>\n                        {filteredHeatTypes.includes(HeatingType.NetworkHeat) && (\n                          <Col span={6}>\n                            <div className=\"CalculatorStep__heatingTypeElement\">\n                              <Button\n                                id=\"NetworkHeat\"\n                                name=\"heatingType\"\n                                onClick={() => setFieldValue('heatingType', 'NetworkHeat')}\n                                className={classNames('Button', { 'Button--active': values.heatingType === 'NetworkHeat' })}\n                                type=\"primary\"\n                              >\n                                Ciepło sieciowe\n                                {!!state.media?.heatDateConnection && (\n                                  <span className=\"CalculatorStep__heatingDate\">\n                                    Data podłączenia:\n                                    {moment(state.media?.heatDateConnection).format('DD.MM.YYYY')}\n                                  </span>\n                                )}\n                              </Button>\n                            </div>\n                          </Col>\n                        )}\n                        {filteredHeatTypes.includes(HeatingType.NetworkNaturalGas) && (\n                          <Col span={6}>\n                            <div className=\"CalculatorStep__heatingTypeElement\">\n                              <Button\n                                id=\"NetworkNaturalGas\"\n                                name=\"heatingType\"\n                                onClick={() => setFieldValue('heatingType', 'NetworkNaturalGas')}\n                                className={classNames('Button', { 'Button--active': values.heatingType === 'NetworkNaturalGas' })}\n                                type=\"primary\"\n                              >\n                                Sieć gazowa\n                                {!!state.media?.gasDateConnection && (\n                                  <span className=\"CalculatorStep__heatingDate\">\n                                    Data podłączenia:\n                                    {moment(state.media?.gasDateConnection).format('DD.MM.YYYY')}\n                                  </span>\n                                )}\n                              </Button>\n                            </div>\n                          </Col>\n                        )}\n                        {filteredHeatTypes.includes(HeatingType.LiquefiedNaturalGas) && (\n                          <Col span={6}>\n                            <div className=\"CalculatorStep__heatingTypeElement\">\n                              <Button\n                                id=\"LiquefiedNaturalGas\"\n                                name=\"heatingType\"\n                                onClick={() => setFieldValue('heatingType', 'LiquefiedNaturalGas')}\n                                className={classNames('Button', { 'Button--active': values.heatingType === 'LiquefiedNaturalGas' })}\n                                type=\"primary\"\n                              >\n                                Gaz płynny (zbiornik)\n                              </Button>\n                            </div>\n                          </Col>\n                        )}\n                        {filteredHeatTypes.includes(HeatingType.Biomass) && (\n                          <Col span={6}>\n                            <div className=\"CalculatorStep__heatingTypeElement\">\n                              <Button\n                                id=\"Biomass\"\n                                name=\"heatingType\"\n                                onClick={() => setFieldValue('heatingType', 'Biomass')}\n                                className={classNames('Button', { 'Button--active': values.heatingType === 'Biomass' })}\n                                type=\"primary\"\n                              >\n                                Biomasa\n                              </Button>\n                            </div>\n                          </Col>\n                        )}\n                        {filteredHeatTypes.includes(HeatingType.Electricity) && (\n                          <Col span={6}>\n                            <div className=\"CalculatorStep__heatingTypeElement\">\n                              <Button\n                                id=\"Electricity\"\n                                name=\"heatingType\"\n                                onClick={() => setFieldValue('heatingType', 'Electricity')}\n                                className={classNames('Button', { 'Button--active': values.heatingType === 'Electricity' })}\n                                type=\"primary\"\n                              >\n                                Energia elektryczna\n                              </Button>\n                            </div>\n                          </Col>\n                        )}\n                      </Row>\n                    </div>\n                  </Form>\n                );\n              }}\n            </Formik>\n            <div className=\"CalculatorStep__estimatedPrice\">\n              <Row>\n                <Col span={12}>\n                  <span>Szacunkowy</span>\n                  <h2>Koszt instalacji ogrzewania</h2>\n                  <p>obejmuje koszt projektu i instalacji</p>\n                  {!!results?.installationCost && <h3>{results.installationCost.toLocaleString()} zł</h3>}\n                </Col>\n                <Col span={12}>\n                  <span>Szacunkowy</span>\n                  <h2>Miesięczny koszt ogrzewania</h2>\n                  <p>obejmuje koszt ogrzewania budynku i podgrzania wody</p>\n                  {!!results?.monthlyUsageCost && <h3>{results.monthlyUsageCost.toLocaleString()} zł</h3>}\n                </Col>\n              </Row>\n            </div>\n            <div className=\"CalculatorStep__chart\">\n              <h2 className=\"CalculatorStep__chartTitle\">Całkowity koszt inwestycji</h2>\n              {results && heatingType && (\n                <div>\n                  <Line type=\"line\" data={data} options={options} />\n                </div>\n              )}\n              <p className=\"CalculatorStep__chartDescription\">Kolejne lata</p>\n            </div>\n          </Col>\n        </Row>\n      </div>\n      <div className=\"CalculatorStep__calculatorMessage\">\n        <div className=\"CalculatorStep__calculatorMessageInner\">\n          <h2>Jak zmniejszyć koszty instalacji?</h2>\n          <p>\n            Dofinansowanie ze środków Urzędu Miasta umożliwia wymianę ogrzewania węglowego na czyste i bardziej ekologiczne źródło ciepła w\n            znacznie niższej cenie.\n          </p>\n          <div className=\"CalculatorStep__estimatedPrice CalculatorStep__messageEstimatedPrice\">\n            <Row>\n              <Col offset={4} span={16}>\n                <Row>\n                  <Col span={12}>\n                    <span>Szacunkowy</span>\n                    <h2>Koszt instalacji ogrzewania</h2>\n                    <p>po uwzględnieniu dotacji z Urzędu Miasta</p>\n                    {!!results?.installationCost && <h3>{getPriceAfterGrant(results.installationCost)} zł</h3>}\n                  </Col>\n                  <Col span={12}>\n                    <span>Szacunkowy</span>\n                    <h2>Miesięczny koszt ogrzewania</h2>\n                    <p>obejmuje koszt ogrzewania budynku i podgrzania wody</p>\n                    {!!results?.monthlyUsageCost && <h3>{results.monthlyUsageCost.toLocaleString()} zł</h3>}\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </div>\n          <Button type=\"primary\" className=\"Button\" onClick={() => goToNextStep()}>\n            Sprawdź warunki\n            <Icon.ArrowRight />\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import { Col, Row } from 'antd';\nimport * as React from 'react';\nimport { FillFormStep } from '../shared/fillFormStep/FillFormStep';\n\nexport const FillFormPage = () => {\n  return (\n    <div className=\"FillFormPage\">\n      <Row>\n        <Col offset={4} span={16}>\n          <FillFormStep />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport './WelcomePage.css';\nimport imgLanding from '../../static/images/img-person-bounds.svg';\nimport { routes } from '../../routes';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Col, Popover, Row, Spin } from 'antd';\nimport * as Icon from 'react-feather';\nimport { apiUrl } from '../../App';\n\ninterface SensorResultDto {\n  longtitude: number;\n  latitude: number;\n  currentValuePm10: string;\n  currentValuePm25: string;\n  currentColourPm10: string;\n  currentColourPm25: string;\n  currentOrderNumberPm10: number;\n  currentOrderNumberPm25: number;\n  forecastedValuePm10: string;\n  forecastedValuePm25: string;\n  forecastedColourPm10: string;\n  forecastedColourPm25: string;\n  forecastedOrderNumberPm10: number;\n  forecastedOrderNumberPm25: number;\n  forecastedDateTime: string;\n  street: string;\n  buildingNumber: string;\n  pm1: number;\n  pm25: number;\n  pm1number: number;\n  temperatura: number;\n  predkoscMax: number;\n  dataGodzina: string;\n  measurements: [null];\n  predkosc: string;\n  caqiPm25: number;\n  caqiPm10: number;\n}\n\nexport const WelcomePage = () => {\n  const [sensorResult, setSensorResult] = React.useState<SensorResultDto>();\n\n  React.useEffect(() => {\n    axios.get<SensorResultDto>(`${apiUrl}/Sensors/Worst`).then((x) => {\n      setSensorResult(x.data);\n    });\n  }, []);\n\n  const getSensorTextOpinion = (result: number) => {\n    if (result > 75) {\n      return 'Jakość powietrza jest zła';\n    }\n\n    if (result > 50) {\n      return 'Jakość powietrza nie jest dzisiaj najlepsza';\n    }\n\n    return 'Jakość powietrza jest w porzadku';\n  };\n\n  return (\n    <section className=\"WelcomePage\">\n      <Row>\n        <Col offset={10} span={8} style={{ position: 'relative', zIndex: 5 }}>\n          <p className=\"WelcomePage__info\">\n            Prawie 70% domów wciąż ogrzewane jest piecami węglowymi. <br />\n            <br /> Zyskaj nawet <strong>5 000 zł</strong> na wymianę swojego pieca dzięki dofinansowaniu z programu{' '}\n            <strong>Stop smog</strong>\n          </p>\n          <Link className=\"LinkAsButton\" to={routes.changeFurnace}>\n            Dowiedz się więcej\n          </Link>\n        </Col>\n      </Row>\n      <div className=\"WelcomePage__messageBox\">\n        <h2 className=\"WelcomePage__messageTitle\">Aktualna Jakość powietrza</h2>\n        <h3 className=\"WelcomePage__city\">Zduńska Wola</h3>\n        {!sensorResult ? (\n          <Spin />\n        ) : (\n          <>\n            <h4 className=\"WelcomePage__street\">Ul. {sensorResult.street}</h4>\n            <div className=\"WelcomePage__measureResult\">\n              <h5>{sensorResult.caqiPm10}</h5>\n              <p>\n                CAQI (PM10) <br />\n                /100\n              </p>\n            </div>\n          </>\n        )}\n        <Popover\n          placement=\"bottom\"\n          content=\"CAQI to wskaźnik godzinowej jakości powietrza. Im wyższą ma wartość, tym bardziej zanieczyszczone jest powietrze, którym oddychasz.\"\n          trigger=\"hover\"\n        >\n          <Icon.Info className=\"WelcomePage__infoIcon\" />\n        </Popover>\n      </div>\n      <img className=\"WelcomePage__backgroundImage\" src={imgLanding} alt=\"\" />\n    </section>\n  );\n};\n","import { Col, Row } from 'antd';\nimport * as React from 'react';\nimport { AppFooter } from '../../layout/footer/AppFooter';\nimport './PrivacyPolicyPage.css';\nimport imgLanding from '../../static/images/img-bushes.svg';\nimport logo from '../../static/images/logo.svg';\n\nexport const PrivacyPolicyPage = () => {\n  return (\n    <>\n      <div className=\"PrivacyPolicyPage\">\n        <Row>\n          <Col offset={4} span={16}>\n            <Row>\n              <Col offset={4} span={16}>\n                <h1 className=\"PrivacyPolicyPage__title\">Polityka prywatności</h1>\n                <section className=\"PrivacyPolicyPage__section\">\n                  <h1 className=\"PrivacyPolicyPage__sectionTitle\">1. Wprowadzenie</h1>\n                  <p>\n                    Prywatność odwiedzających naszą stronę internetową jest dla nas bardzo ważna i dokładamy wszelkich starań, aby ją\n                    chronić. Niniejsza polityka wyjaśnia, co robimy z Twoimi danymi osobowymi. Zgoda na korzystanie z plików cookie zgodnie\n                    z warunkami niniejszej polityki podczas pierwszej wizyty na naszej stronie pozwala nam na korzystanie z plików cookie\n                    przy każdej kolejnej wizycie na naszej stronie.\n                  </p>\n                  <h1 className=\"PrivacyPolicyPage__sectionTitle\">2. Zbieranie danych osobowych</h1>\n                  <p>\n                    Następujące rodzaje danych osobowych mogą być gromadzone, przechowywane i wykorzystywane:\n                    <br /> <br />\n                    informacje o komputerze, w tym adres IP, lokalizacja geograficzna, typ i wersja przeglądarki oraz system operacyjny;\n                    <br />\n                    informacje o Twoich wizytach i korzystaniu z tej witryny, w tym źródło odesłań, długość wizyty, wyświetlenia stron i\n                    ścieżki nawigacji w witrynie;\n                    <br />\n                    informacje, takie jak adres e-mail, które podajesz podczas rejestracji w naszej witrynie internetowej;\n                    <br />\n                    informacje wprowadzane podczas tworzenia profilu w naszej witrynie — na przykład imię i nazwisko, zdjęcia profilowe,\n                    płeć, data urodzin, status związku, zainteresowania i hobby, dane edukacyjne i dane dotyczące zatrudnienia;\n                    <br />\n                    informacje, takie jak imię i nazwisko oraz adres e-mail, które podajesz w celu skonfigurowania subskrypcji naszych\n                    e-maili lub biuletynów;\n                    <br />\n                    informacje wprowadzane podczas korzystania z usług na naszej stronie internetowej;\n                    <br />\n                    informacje, które są generowane podczas korzystania z naszej strony internetowej, w tym kiedy, jak często i w jakich\n                    okolicznościach z niej korzystasz;\n                    <br />\n                    informacje dotyczące wszystkiego, co kupujesz, usług, z których korzystasz lub transakcji dokonywanych za pośrednictwem\n                    naszej strony internetowej, w tym imię i nazwisko, adres, numer telefonu, adres e-mail i dane karty kredytowej;\n                    <br />\n                    informacje publikowane na naszej stronie internetowej z zamiarem opublikowania ich w Internecie, w tym nazwa\n                    użytkownika, zdjęcia profilowe i treść umieszczanych postów;\n                    <br />\n                    informacje zawarte we wszelkiej korespondencji przesyłanej do nas e-mailem lub za pośrednictwem naszej strony\n                    internetowej, w tym treści komunikacyjne i metadane;\n                    <br />\n                    wszelkie inne dane osobowe, które nam przesyłasz.\n                    <br /> <br />\n                    Zanim ujawnisz nam dane osobowe innej osoby, musisz uzyskać zgodę tej osoby na ujawnienie i przetwarzanie tych danych\n                    osobowych zgodnie z niniejszymi zasadami\n                  </p>\n\n                  <h1 className=\"PrivacyPolicyPage__sectionTitle\">3. Korzystanie z Twoich danych osobowych</h1>\n                  <p>\n                    Dane osobowe przesłane do nas za pośrednictwem naszej strony internetowej będą wykorzystywane do celów określonych w\n                    niniejszej polityce lub na odpowiednich stronach witryny. Możemy wykorzystywać Twoje dane osobowe do celu:\n                    <br /> <br />\n                    administrowania naszą stroną internetową i biznesem; <br />\n                    personalizowania naszej strony internetowej dla Ciebie; <br />\n                    umożliwienia korzystania z usług dostępnych na naszej stronie internetowej; <br />\n                    wysyłania towarów zakupionych za pośrednictwem naszej strony internetowej; <br />\n                    świadczenia usług zakupionych za pośrednictwem naszej strony internetowej; <br />\n                    wysyłania do ciebie wyciągów, faktur i przypomnień o płatnościach oraz odbioru płatności od Ciebie; <br />\n                    przesyłania niemarketingowej komunikacji handlowej; <br />\n                    wysyłania powiadomień e-mail, o które prosiłeś; <br />\n                    wysyłania naszego newslettera e-mail, jeśli o to poprosiłeś (możesz nas w każdej chwili poinformować, jeśli nie chcesz\n                    już otrzymywać newslettera); <br />\n                    przesyłania informacji marketingowych dotyczących naszej działalności lub aktywności starannie wybranych stron trzecich,\n                    które naszym zdaniem mogą Cię zainteresować, pocztą lub, jeśli wyraziłeś na to zgodę, pocztą elektroniczną lub podobną\n                    technologią (możesz nas o tym poinformować w dowolnym momencie, jeśli nie chcesz już otrzymywać komunikatów\n                    marketingowych); <br />\n                    dostarczania stronom trzecim informacji statystycznych o naszych użytkownikach (ale te osoby trzecie nie będą w stanie\n                    zidentyfikować żadnego konkretnego użytkownika na podstawie tych informacji); <br />\n                    zajmowania się zapytaniami i skargami składanymi przez Ciebie lub dotyczącymi Ciebie w związku z naszą witryną; <br />\n                    zapewnienia bezpieczeństwa naszej strony internetowej i zapobieganie oszustwom; <br />\n                    weryfikacji zgodności z warunkami korzystania z naszej strony internetowej (w tym monitorowanie prywatnych wiadomości\n                    wysyłanych za pośrednictwem naszej prywatnej usługi przesyłania wiadomości); i innych zastosowań.\n                    <br /> <br />\n                    Jeśli prześlesz dane osobowe do publikacji w naszej witrynie, opublikujemy je i wykorzystamy w inny sposób zgodnie z\n                    udzieloną nam licencją.\n                    <br /> <br />\n                    Twoje ustawienia prywatności mogą być wykorzystane do ograniczenia publikacji Twoich informacji na naszej stronie\n                    internetowej i mogą być dostosowane za pomocą kontroli prywatności na stronie. Nie będziemy bez Twojej wyraźnej zgody\n                    przekazywać danych osobowych stronom trzecim, lub jakimkolwiek innym związanym z nimi stronom trzecim, w celach\n                    marketingu bezpośredniego.\n                  </p>\n                </section>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <img className=\"PrivacyPolicyPage__backgroundImage\" src={imgLanding} alt=\"\" />\n      </div>\n\n      <AppFooter />\n    </>\n  );\n};\n","import * as React from 'react';\nimport './ContactPage.css';\nimport { Button, Checkbox, Col, Popover, Row, Spin } from 'antd';\n\nimport { Form, Formik, FormikProps } from 'formik';\nimport * as Yup from 'yup';\nimport { InputField } from '../../shared/forms/Input/InputField';\nimport img from '../../static/images/img-city.svg';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../../routes';\n\ntype FormValues = {\n  title: string;\n  message: string;\n  // email: string;\n  // phoneNumber: string;\n};\n\nconst FormSchema = Yup.object().shape<FormValues>({\n  title: Yup.string().required(),\n  message: Yup.string().required(),\n  // email: Yup.string().required(),\n  // phoneNumber: Yup.string().required(),\n});\n\nexport const ContactPage = () => {\n  const [isPrivacyPolicyAccepted, setPrivacyPolicy] = React.useState(false);\n\n  const onSubmit = (form: FormValues) => {\n    const { title, message } = form;\n\n    const mailToLink = `mailto:urzad_miasta@zdunskawola.pl?subject=${title}&body=${message}`;\n    window.location.href = mailToLink;\n  };\n\n  return (\n    <div className=\"ContactPage\">\n      <Row>\n        <Col offset={4} span={16}>\n          <Row>\n            <Col offset={4} span={16}>\n              <h1 className=\"ContactPage__title\">Masz pytania dotyczące dopłat?</h1>\n              <p className=\"ContactPage__description\">Skontaktuj się z nami, służymy Ci naszą pomocą.</p>\n              <div className=\"ContactPage__form\">\n                <Row>\n                  <Col offset={2} span={16}>\n                    <Formik\n                      validationSchema={FormSchema}\n                      validateOnMount={true}\n                      initialValues={{\n                        title: '',\n                        message: '',\n                        email: '',\n                        phoneNumber: '',\n                      }}\n                      onSubmit={onSubmit}\n                    >\n                      {({ values, setFieldValue, setFieldTouched, isValid }: FormikProps<FormValues>) => (\n                        <Form>\n                          <InputField\n                            id=\"title\"\n                            type=\"text\"\n                            value={values.title}\n                            name=\"title\"\n                            onChange={setFieldValue}\n                            onFocus={setFieldTouched}\n                          >\n                            Temat wiadomości\n                          </InputField>\n\n                          <InputField\n                            id=\"message\"\n                            type=\"textarea\"\n                            value={values.message}\n                            className=\"\"\n                            name=\"message\"\n                            onChange={setFieldValue}\n                            onFocus={setFieldTouched}\n                          >\n                            Treść\n                          </InputField>\n\n                          {/* <InputField\n                            id=\"email\"\n                            type=\"text\"\n                            value={values.email}\n                            name=\"email\"\n                            onChange={setFieldValue}\n                            onFocus={setFieldTouched}\n                          >\n                            Twój email\n                          </InputField>\n\n                          <InputField\n                            id=\"phoneNumber\"\n                            type=\"text\"\n                            value={values.phoneNumber}\n                            name=\"phoneNumber\"\n                            onChange={setFieldValue}\n                            onFocus={setFieldTouched}\n                          >\n                            Twój numer telefonu\n                          </InputField> */}\n                          <Checkbox onChange={(e) => setPrivacyPolicy(e.target.checked)}>\n                            Znam i akcjeptuję <Link to={routes.privacyPolicy}>Politykę prywatności</Link>\n                          </Checkbox>\n\n                          <Row>\n                            <Col offset={14} span={10}>\n                              <Button disabled={!isValid || !isPrivacyPolicyAccepted} className=\"Button\" type=\"primary\" htmlType=\"submit\">\n                                Wyślij\n                              </Button>\n                            </Col>\n                          </Row>\n                        </Form>\n                      )}\n                    </Formik>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import { Button, Layout } from 'antd';\nimport React from 'react';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { BrowserRouter as Router, Route, Switch, useLocation } from 'react-router-dom';\nimport './App.css';\nimport { AppProvider } from './AppState/AppContext';\nimport { AppFooter } from './layout/footer/AppFooter';\nimport { AppHeader } from './layout/header/AppHeader';\nimport { ApplicationWizard } from './modules/applicationWizard/ApplicationWizard';\nimport { ChangeFurnacePage } from './modules/changeFurnace/ChangeFurnacePage';\nimport { FillFormPage } from './modules/fillForm/FillFormPage';\nimport { WelcomePage } from './modules/welcome/WelcomePage';\nimport * as Icon from 'react-feather';\nimport { useHistory } from 'react-router-dom';\nimport { routes } from './routes';\nimport { smoothScrollToSection } from './shared/utils';\nimport { PrivacyPolicyPage } from './modules/privacyPolicy/PrivacyPolicyPage';\nimport { ContactPage } from './modules/contact/ContactPage';\nimport logo from './static/images/logo.svg';\n\nconst { Content, Header } = Layout;\n\nconst BackContextWrapper = (props: { children: React.ReactNode; backTo: string }) => {\n  const history = useHistory();\n\n  const location = useLocation();\n  React.useEffect(() => {\n    smoothScrollToSection('root');\n  }, [location.pathname]);\n\n  return (\n    <>\n      <Header className=\"AppHeader\">\n        <Button className=\"AppHeader__backButton\" onClick={() => history.push(props.backTo)} type=\"text\">\n          <Icon.ArrowLeft /> Wróć na poprzednią stronę\n        </Button>\n      </Header>\n      <Content className=\"App__content\">{props.children}</Content>\n    </>\n  );\n};\n\nconst isProd = process.env.NODE_ENV == 'production';\nexport const apiUrl = isProd ? 'https://wolniodsmogu.azurewebsites.net/api' : 'http://localhost:5000/api';\n\nconst App = () => {\n  return (\n    <HelmetProvider>\n      <Router basename={isProd ? '/will-energy' : undefined}>\n        <AppProvider>\n          <Layout className=\"App\">\n            <Switch>\n              <Route exact path={routes.applicationWizard}>\n                <BackContextWrapper backTo={routes.fillForm}>\n                  <ApplicationWizard />\n                </BackContextWrapper>\n              </Route>\n              <Route exact path={routes.privacyPolicy}>\n                <BackContextWrapper backTo={'/'}>\n                  <PrivacyPolicyPage />\n                </BackContextWrapper>\n              </Route>\n              <Route path=\"/\">\n                <AppHeader logoImage={logo} />\n                <Content className=\"App__content\">\n                  <Switch>\n                    <Route exact path=\"/\">\n                      <WelcomePage />\n                    </Route>\n                    <Route exact path={routes.changeFurnace}>\n                      <ChangeFurnacePage />\n                    </Route>\n                    <Route exact path={routes.fillForm}>\n                      <FillFormPage />\n                    </Route>\n                    <Route exact path={routes.contact}>\n                      <ContactPage />\n                    </Route>\n                  </Switch>\n                </Content>\n                <AppFooter />\n              </Route>\n            </Switch>\n          </Layout>\n        </AppProvider>\n      </Router>\n    </HelmetProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}